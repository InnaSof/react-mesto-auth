{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState(''); // const [message, setMessage] = useState('');\n\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = useState(false);\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); //   useEffect(() => {\n  //     if (localStorage.getItem('jwt')) {\n  //       const jwt = localStorage.getItem('jwt');\n  //       checkToken(jwt)\n  //         .then((res) => {\n  //           if(res) {\n  //             setIsLoggedIn(true);\n  //             setEmail(res.email); \n  //           }\n  //         })\n  //         .catch((err) => {\n  //           openRegModal();\n  //           console.log(`Произошла ошибка: ${err}`);\n  //         });\n  //     }\n  //   }, [history, loggedIn]);\n  //   function tokenCheck() {\n  //     if (localStorage.getItem('jwt')) {\n  //       const jwt = localStorage.getItem('jwt');\n  //       if (jwt) {\n  //         auth.checkToken(jwt)\n  //         .then((res) => {\n  //           if (res) {\n  //             setEmail(res.data.email);\n  //             setIsLoggedIn(true);\n  //           }\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  //       }\n  //     }\n  //   }\n  //   const history = useHistory();\n  //   useEffect(() => {\n  //     tokenCheck();\n  // }, [isLoggedIn])\n\n  function handleRegister(_ref2) {\n    let {\n      password,\n      email\n    } = _ref2;\n    auth.register({\n      password,\n      email\n    }).then(() => {\n      setRequestSuccessful(true);\n      history.push('/sign-in');\n    }).catch(err => {\n      setRequestSuccessful(false);\n      console.log(err);\n    }).finally(() => {\n      setInfoTooltipPopupOpen(true);\n    });\n  } //   const handleLogin = (data) => {\n  //     const { password, email } = data;\n  //     auth.authorization(password, email)\n  //         .then((data) => { \n  //             if (data.token) { //проверяем, есть ли у пришедших данных токен\n  //                 localStorage.setItem('jwt', data.token); // сохраняем токен пользователя\n  //                 setIsLoggedIn(true);\n  //                 history.push('/');\n  //             }\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // Функция-обработчик для закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  } //обновить данные пользователя\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //обновить аватар\n\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //добавить новую карточку\n\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formName: \"form-confirm\",\n        submitText: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        name: \"image\",\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OvuD88hFsadEICro0096eRXb8Ok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","api","auth","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","Login","Register","ProtectedRoute","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","isRequestSuccessful","setRequestSuccessful","isInfoTooltipPopupOpen","setInfoTooltipPopupOpen","Promise","all","getProfileInfo","getInitialCards","then","user","catch","err","console","error","handleRegister","password","register","history","push","log","finally","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","name","about","res","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","removeLike","handleCardDelete","deleteCard","filter","handleLogin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  // const [message, setMessage] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n//   useEffect(() => {\n//     if (localStorage.getItem('jwt')) {\n//       const jwt = localStorage.getItem('jwt');\n  \n//       checkToken(jwt)\n//         .then((res) => {\n//           if(res) {\n//             setIsLoggedIn(true);\n//             setEmail(res.email); \n//           }\n//         })\n//         .catch((err) => {\n//           openRegModal();\n//           console.log(`Произошла ошибка: ${err}`);\n//         });\n//     }\n//   }, [history, loggedIn]);\n\n//   function tokenCheck() {\n//     if (localStorage.getItem('jwt')) {\n//       const jwt = localStorage.getItem('jwt');\n//       if (jwt) {\n//         auth.checkToken(jwt)\n//         .then((res) => {\n//           if (res) {\n//             setEmail(res.data.email);\n//             setIsLoggedIn(true);\n//           }\n//         })\n//         .catch((err) => {\n//             console.log(err);\n//         });\n//       }\n//     }\n//   }\n\n//   const history = useHistory();\n\n//   useEffect(() => {\n//     tokenCheck();\n// }, [isLoggedIn])\n\nfunction handleRegister({ password, email }) {\n  auth.register({ password, email })\n    .then(() => {\n      setRequestSuccessful(true);\n      history.push('/sign-in');\n    })\n    .catch((err) => {\n      setRequestSuccessful(false);\n      console.log(err);\n    })\n    .finally(() => {\n      setInfoTooltipPopupOpen(true);\n    })\n}\n\n  //   const handleLogin = (data) => {\n  //     const { password, email } = data;\n  //     auth.authorization(password, email)\n  //         .then((data) => { \n  //             if (data.token) { //проверяем, есть ли у пришедших данных токен\n  //                 localStorage.setItem('jwt', data.token); // сохраняем токен пользователя\n  //                 setIsLoggedIn(true);\n  //                 history.push('/');\n  //             }\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         });\n  // }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  // Функция-обработчик для закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n    //обновить данные пользователя\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //обновить аватар\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //добавить новую карточку\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n        }).catch((err) => {\n          console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.error(err);\n      });\n    }\n  }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((cards) =>\n                    cards.filter((c) =>\n                        c._id !== card._id\n                    )\n                )\n                closeAllPopups();\n            })\n            .catch((err) => {\n               console.error(err);\n            });\n    }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header />\n        <Switch>\n          <Route path='/sign-up'>\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route path='/sign-in'>\n            <Login onLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute exact path=\"/\"\n            component = {Main}\n            onEditAvatar = {handleEditAvatarClick}\n            onEditProfile = {handleEditProfileClick}\n            onAddPlace = {handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n        </Switch>  \n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          formName=\"form-confirm\"\n          submitText=\"Да\"\n          onClose={closeAllPopups}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup\n          name=\"image\"\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}