{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from \"../utils/api\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // Функция-обработчик для закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  } //обновить данные пользователя\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //обновить аватар\n\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //добавить новую карточку\n\n\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data.name, data.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike() {}\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onSubmit: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"confirm\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          formName: \"form-confirm\",\n          submitText: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          name: \"image\",\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"a5t8CWB4bSL3oTt4sjvhxRpv98E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/mesto-react/src/components/App.js"],"names":["React","api","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","user","catch","err","console","error","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","name","about","res","log","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","data","addCard","link","newCard","handleCardLike","handleCardDelete"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from \"../utils/api\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  // Функция-обработчик для закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n    //обновить данные пользователя\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //обновить аватар\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //добавить новую карточку\n  function handleAddPlaceSubmit(data) {\n    api.addCard(data.name, data.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleCardLike() {\n\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page__container\">\n          <>\n            <Header />\n            <Main\n              onEditAvatar = {handleEditAvatarClick}\n              onEditProfile = {handleEditProfileClick}\n              onAddPlace = {handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n            <Footer />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleAddPlaceSubmit}\n            />\n            <PopupWithForm\n              name=\"confirm\"\n              title=\"Вы уверены?\"\n              formName=\"form-confirm\"\n              submitText=\"Да\"\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n            <ImagePopup\n              name=\"image\"\n              card={selectedCard}\n              onClose={closeAllPopups}\n            />\n          </>\n        </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}