{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []); // function handleEditAvatarClick() {\n  //   setIsEditAvatarPopupOpen(true);\n  // }\n  // function handleEditProfileClick() {\n  //   setIsEditProfilePopupOpen(true);\n  // }\n  // function handleAddPlaceClick() {\n  //   setIsAddPlacePopupOpen(true);\n  // }\n  // function handleCardClick(card){\n  //   setSelectedCard(card);\n  // }\n  // // Функция-обработчик для закрытия всех попапов\n  // function closeAllPopups() {\n  //   setIsEditAvatarPopupOpen(false);\n  //   setIsEditProfilePopupOpen(false);\n  //   setIsAddPlacePopupOpen(false);\n  //   setSelectedCard({});\n  // }\n  //   //обновить данные пользователя\n  // function handleUpdateUser(user) {\n  //   api.editProfile(user.name, user.about)\n  //     .then((res) => {\n  //       setCurrentUser(res);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }\n  //   //обновить аватар\n  // function handleUpdateAvatar(avatar) {\n  //   api.editAvatar(avatar)\n  //     .then((res) => {\n  //       setCurrentUser(res);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }\n  //   //добавить новую карточку\n  // function handleAddPlaceSubmit(card) {\n  //   api.addCard(card.name, card.link)\n  //     .then((newCard) => {\n  //       console.log(newCard);\n  //       setCards([newCard, ...cards]);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     });\n  // }\n  // function handleCardLike(card) {\n  //   const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  //   if (!isLiked) {\n  //     api.addLike(card._id)\n  //       .then((newCard) => {\n  //         setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //       }).catch((err) => {\n  //         console.error(err);\n  //     });\n  //   } else {\n  //     api.removeLike(card._id).then((newCard) => {\n  //       setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //     }).catch((err) => {\n  //       console.error(err);\n  //     });\n  //   }\n  // }\n  //   function handleCardDelete(card) {\n  //       api.deleteCard(card._id)\n  //           .then(() => {\n  //               setCards((cards) =>\n  //                   cards.filter((c) =>\n  //                       c._id !== card._id\n  //                   )\n  //               )\n  //               closeAllPopups();\n  //           })\n  //           .catch((err) => {\n  //              console.error(err);\n  //           });\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"confirm\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          formName: \"form-confirm\",\n          submitText: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          name: \"image\",\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"a5t8CWB4bSL3oTt4sjvhxRpv98E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/mesto-react/src/components/App.js"],"names":["React","api","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getProfileInfo","getInitialCards","then","user","catch","err","console","error","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleCardLike","handleCardDelete","closeAllPopups","handleUpdateUser","handleAddPlaceSubmit","handleUpdateAvatar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  // function handleEditAvatarClick() {\n  //   setIsEditAvatarPopupOpen(true);\n  // }\n\n  // function handleEditProfileClick() {\n  //   setIsEditProfilePopupOpen(true);\n  // }\n\n  // function handleAddPlaceClick() {\n  //   setIsAddPlacePopupOpen(true);\n  // }\n\n  // function handleCardClick(card){\n  //   setSelectedCard(card);\n  // }\n\n  // // Функция-обработчик для закрытия всех попапов\n  // function closeAllPopups() {\n  //   setIsEditAvatarPopupOpen(false);\n  //   setIsEditProfilePopupOpen(false);\n  //   setIsAddPlacePopupOpen(false);\n  //   setSelectedCard({});\n  // }\n\n  //   //обновить данные пользователя\n  // function handleUpdateUser(user) {\n  //   api.editProfile(user.name, user.about)\n  //     .then((res) => {\n  //       setCurrentUser(res);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }\n\n  //   //обновить аватар\n  // function handleUpdateAvatar(avatar) {\n  //   api.editAvatar(avatar)\n  //     .then((res) => {\n  //       setCurrentUser(res);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }\n\n  //   //добавить новую карточку\n  // function handleAddPlaceSubmit(card) {\n  //   api.addCard(card.name, card.link)\n  //     .then((newCard) => {\n  //       console.log(newCard);\n  //       setCards([newCard, ...cards]);\n  //       closeAllPopups();\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     });\n  // }\n\n  // function handleCardLike(card) {\n  //   const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  //   if (!isLiked) {\n  //     api.addLike(card._id)\n  //       .then((newCard) => {\n  //         setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //       }).catch((err) => {\n  //         console.error(err);\n  //     });\n  //   } else {\n  //     api.removeLike(card._id).then((newCard) => {\n  //       setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //     }).catch((err) => {\n  //       console.error(err);\n  //     });\n  //   }\n  // }\n\n  //   function handleCardDelete(card) {\n  //       api.deleteCard(card._id)\n  //           .then(() => {\n  //               setCards((cards) =>\n  //                   cards.filter((c) =>\n  //                       c._id !== card._id\n  //                   )\n  //               )\n  //               closeAllPopups();\n  //           })\n  //           .catch((err) => {\n  //              console.error(err);\n  //           });\n  //   }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page__container\">\n          <>\n            <Header />\n            <Main\n              onEditAvatar = {handleEditAvatarClick}\n              onEditProfile = {handleEditProfileClick}\n              onAddPlace = {handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n            <Footer />\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n            <PopupWithForm\n              name=\"confirm\"\n              title=\"Вы уверены?\"\n              formName=\"form-confirm\"\n              submitText=\"Да\"\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n            <ImagePopup\n              name=\"image\"\n              card={selectedCard}\n              onClose={closeAllPopups}\n            />\n          </>\n        </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}