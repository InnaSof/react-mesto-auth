{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      if (jwt) {\n        auth.getContent(jwt).then(res => {\n          if (res) {\n            setEmail(res.data.email);\n            setLoggedIn(true);\n            history.push('/');\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  const handleRegister = data => {\n    const {\n      email,\n      password\n    } = data;\n    auth.register(email, password).then(res => {\n      if (!res || res.statusCode === 400) {\n        throw new Error('Что-то не так с регистрацией');\n      }\n\n      if (res.data) {\n        setRequestSuccessful(true);\n      }\n    }).catch(err => console.log(`Что-то пошло не так: ${err}`));\n  };\n\n  const handleLogin = data => {\n    const {\n      email,\n      password\n    } = data;\n    auth.authorize(email, password).then(res => {\n      if (!res || res.statusCode === 401) {\n        setIsInfoTooltipOpen(true);\n        throw new Error('Пользователь не зарегестрирован');\n      }\n\n      if (!res || res.statusCode === 400) {\n        setIsInfoTooltipOpen(true);\n        throw new Error('Не передано одно из полей ');\n      }\n\n      if (res.token) {\n        setLoggedIn(true);\n        setRequestSuccessful(true);\n        history.push('/');\n        localStorage.setItem('jwt', res.token);\n        getContent(res.token).then(res => {\n          if (res) {\n            setLoginData(res.data);\n          }\n        });\n      }\n    }).catch(err => console.log(`Что-то пошло не так: ${err}`));\n  };\n\n  useEffect(() => {\n    tokenCheck();\n  }, [loggedIn]);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // Функция-обработчик для закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  } //обновить данные пользователя\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //обновить аватар\n\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //добавить новую карточку\n\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formName: \"form-confirm\",\n        submitText: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        name: \"image\",\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EOgYYDZ9c4s4Lnf8oNvhhs/c6+w=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","api","auth","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","Login","Register","ProtectedRoute","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","history","useHistory","isLoggedIn","setIsLoggedIn","email","setEmail","message","setMessage","isRequestSuccessful","setRequestSuccessful","Promise","all","getProfileInfo","getInitialCards","then","user","catch","err","console","error","tokenCheck","localStorage","getItem","jwt","getContent","res","data","setLoggedIn","push","log","handleRegister","password","register","statusCode","Error","handleLogin","authorize","setIsInfoTooltipOpen","token","setItem","setLoginData","loggedIn","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","name","about","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","removeLike","handleCardDelete","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        auth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setEmail(res.data.email);\n            setLoggedIn(true);\n            history.push('/');\n          }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n      }\n    }\n  }\n\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    auth.register(email, password)\n        .then((res) => {\n          if (!res || res.statusCode === 400) {\n            throw new Error('Что-то не так с регистрацией');\n          }\n          if (res.data) {\n            setRequestSuccessful(true);\n          }\n        })\n        .catch((err) => console.log(`Что-то пошло не так: ${err}`))\n      }\n\n      const handleLogin = (data) => {\n        const { email, password } = data;\n        auth.authorize(email, password)\n            .then((res) => {\n                if (!res || res.statusCode === 401) {\n                    setIsInfoTooltipOpen(true)\n                    throw new Error('Пользователь не зарегестрирован');\n                }\n                if (!res || res.statusCode === 400) {\n                    setIsInfoTooltipOpen(true)\n                    throw new Error('Не передано одно из полей ');\n                }\n                if (res.token) {\n                    setLoggedIn(true);\n                    setRequestSuccessful(true);\n                    history.push('/')\n                    localStorage.setItem('jwt', res.token);\n                    getContent(res.token)\n                        .then((res) => {\n                            if (res){\n                            setLoginData(res.data);\n                            }\n                        });\n                }\n            })\n            .catch((err) => console.log(`Что-то пошло не так: ${err}`))\n    }\n\n\n  useEffect(() => {\n    tokenCheck();\n  }, [loggedIn])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  // Функция-обработчик для закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n    //обновить данные пользователя\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //обновить аватар\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //добавить новую карточку\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n        }).catch((err) => {\n          console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.error(err);\n      });\n    }\n  }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((cards) =>\n                    cards.filter((c) =>\n                        c._id !== card._id\n                    )\n                )\n                closeAllPopups();\n            })\n            .catch((err) => {\n               console.error(err);\n            });\n    }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header \n          loggedIn={loggedIn} \n          email={email} \n        />\n        <Switch>\n          <Route path='/sign-up'>\n            <Register handleRegister={handleRegister} />\n          </Route>\n          <Route path='/sign-in'>\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute exact path=\"/\"\n            component = {Main}\n            onEditAvatar = {handleEditAvatarClick}\n            onEditProfile = {handleEditProfileClick}\n            onAddPlace = {handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n        </Switch>  \n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          formName=\"form-confirm\"\n          submitText=\"Да\"\n          onClose={closeAllPopups}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup\n          name=\"image\"\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}