{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = useState(false);\n  const history = useHistory(); // useEffect(() => {\n  //   Promise.all([api.getProfileInfo(), api.getInitialCards()])\n  //     .then(([user, cards]) => {\n  //       setCurrentUser(user);\n  //       setCards(cards);\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   handleTokenCheck();\n  //   api.getProfileInfo()\n  //     .then((result) => {\n  //       setCurrentUser(result);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     })\n  // }, []);\n\n  useEffect(() => {\n    api.getInitialCards().then(result => {\n      setCards(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      history.push(\"/\");\n    }\n  }, [isLoggedIn, history]);\n\n  function handleRegister(_ref) {\n    let {\n      password,\n      email\n    } = _ref;\n    auth.register({\n      password,\n      email\n    }).then(() => {\n      setRequestSuccessful(true);\n      history.push('/sign-in');\n    }).catch(err => {\n      setRequestSuccessful(false);\n      console.log(err);\n    }).finally(() => {\n      setInfoTooltipPopupOpen(true);\n    });\n  }\n\n  function handleLogin(_ref2) {\n    let {\n      password,\n      email\n    } = _ref2;\n    auth.authorize({\n      password,\n      email\n    }).then(res => {\n      localStorage.setItem('token', res.token);\n      setEmail(email);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem('token');\n    setEmail('');\n    setIsLoggedIn(false);\n  }\n\n  function handleTokenCheck() {\n    if (localStorage.getItem('token')) {\n      const jwt = localStorage.getItem('token');\n      auth.checkToken(jwt).then(res => {\n        setEmail(res.data.email);\n        setIsLoggedIn(true);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // Функция-обработчик для закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setInfoTooltipPopupOpen(false);\n    setSelectedCard({});\n  } //обновить данные пользователя\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //обновить аватар\n\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //добавить новую карточку\n\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closeAllPopups,\n        regStatus: isRequestSuccessful\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formName: \"form-confirm\",\n        submitText: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        name: \"image\",\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6ljmvYVDi4qycqOdhoGf5P0VQ/o=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","api","auth","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","Login","Register","InfoTooltip","ProtectedRoute","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","isRequestSuccessful","setRequestSuccessful","isInfoTooltipPopupOpen","setInfoTooltipPopupOpen","history","getInitialCards","then","result","catch","err","console","log","push","handleRegister","password","register","finally","handleLogin","authorize","res","localStorage","setItem","token","handleSignOut","removeItem","handleTokenCheck","getItem","jwt","checkToken","data","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","user","editProfile","name","about","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","addCard","link","newCard","error","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","removeLike","handleCardDelete","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = useState(false);\n  const history = useHistory();\n\n  // useEffect(() => {\n  //   Promise.all([api.getProfileInfo(), api.getInitialCards()])\n  //     .then(([user, cards]) => {\n  //       setCurrentUser(user);\n  //       setCards(cards);\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   handleTokenCheck();\n  //   api.getProfileInfo()\n  //     .then((result) => {\n  //       setCurrentUser(result);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     })\n  // }, []);\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((result) => {\n        setCards(result);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      history.push(\"/\");\n    }\n  }, [isLoggedIn, history]);\n\nfunction handleRegister({ password, email }) {\n  auth.register({ password, email })\n    .then(() => {\n      setRequestSuccessful(true);\n      history.push('/sign-in');\n    })\n    .catch((err) => {\n      setRequestSuccessful(false);\n      console.log(err);\n    })\n    .finally(() => {\n      setInfoTooltipPopupOpen(true);\n    })\n}\n\nfunction handleLogin({ password, email }) {\n  auth.authorize({ password, email })\n    .then((res) => {\n      localStorage.setItem('token', res.token);\n      setEmail(email);\n      setIsLoggedIn(true);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n}\n\nfunction handleSignOut() {\n  localStorage.removeItem('token');\n  setEmail('');\n  setIsLoggedIn(false);\n}\n\nfunction handleTokenCheck() {\n  if (localStorage.getItem('token')) {\n    const jwt = localStorage.getItem('token');\n    auth.checkToken(jwt)\n      .then((res) => {\n        setEmail(res.data.email)\n        setIsLoggedIn(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  // Функция-обработчик для закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setInfoTooltipPopupOpen(false);\n    setSelectedCard({});\n  }\n\n    //обновить данные пользователя\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //обновить аватар\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //добавить новую карточку\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n        }).catch((err) => {\n          console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.error(err);\n      });\n    }\n  }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((cards) =>\n                    cards.filter((c) =>\n                        c._id !== card._id\n                    )\n                )\n                closeAllPopups();\n            })\n            .catch((err) => {\n               console.error(err);\n            });\n    }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header email={email} onSignOut={handleSignOut} />\n        <Switch>\n          <Route path='/sign-up'>\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route path='/sign-in'>\n            <Login onLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute exact path=\"/\"\n            component = {Main}\n            onEditAvatar = {handleEditAvatarClick}\n            onEditProfile = {handleEditProfileClick}\n            onAddPlace = {handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n        </Switch>  \n        {isLoggedIn && <Footer />}\n        <InfoTooltip\n          isOpen={isInfoTooltipPopupOpen} \n          onClose={closeAllPopups} \n          regStatus={isRequestSuccessful} \n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          formName=\"form-confirm\"\n          submitText=\"Да\"\n          onClose={closeAllPopups}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup\n          name=\"image\"\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}