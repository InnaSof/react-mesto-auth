{"ast":null,"code":"var _jsxFileName = \"/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport auth from \"../utils/auth.js\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState(''); // const [message, setMessage] = useState('');\n\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      if (jwt) {\n        auth.getContent(jwt).then(res => {\n          if (res) {\n            setEmail(res.data.email);\n            setIsLoggedIn(true);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  const history = useHistory();\n  useEffect(() => {\n    tokenCheck();\n  }, [isLoggedIn]);\n\n  const handleRegister = data => {\n    const {\n      email,\n      password\n    } = data;\n    auth.registration(email, password).then(res => {\n      if (!res || res.statusCode === 400) {\n        throw new Error('Что-то не так с регистрацией');\n      }\n\n      if (res.data) {\n        setRequestSuccessful(true);\n      }\n    }).catch(err => console.log(`Что-то пошло не так: ${err}`));\n  };\n\n  const handleLogin = data => {\n    const {\n      password,\n      email\n    } = data;\n    auth.authorization(password, email).then(data => {\n      if (data.token) {\n        //проверяем, есть ли у пришедших данных токен\n        localStorage.setItem('jwt', data.token); // сохраняем токен пользователя\n\n        setIsLoggedIn(true);\n        history.push('/');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // Функция-обработчик для закрытия всех попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  } //обновить данные пользователя\n\n\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //обновить аватар\n\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //добавить новую карточку\n\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formName: \"form-confirm\",\n        submitText: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        name: \"image\",\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WhFCIH10R8jfNQnAINffDKLLjuY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","api","auth","Header","Main","Footer","PopupWithForm","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","CurrentUserContext","Login","Register","ProtectedRoute","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","isRequestSuccessful","setRequestSuccessful","Promise","all","getProfileInfo","getInitialCards","then","user","catch","err","console","error","tokenCheck","localStorage","getItem","jwt","getContent","res","data","log","history","handleRegister","password","registration","statusCode","Error","handleLogin","authorization","token","setItem","push","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","name","about","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","addCard","link","newCard","handleCardLike","isLiked","likes","some","i","_id","addLike","state","map","c","removeLike","handleCardDelete","deleteCard","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDrB,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACsB,sBAAD,EAAyBC,yBAAzB,IAAsDvB,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACwB,mBAAD,EAAsBC,sBAAtB,IAAgDzB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC,CAVa,CAWb;;AACA,QAAM,CAACoC,mBAAD,EAAsBC,oBAAtB,IAA8CrC,QAAQ,CAAC,KAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAClC,GAAG,CAACmC,cAAJ,EAAD,EAAuBnC,GAAG,CAACoC,eAAJ,EAAvB,CAAZ,EACGC,IADH,CACQ,QAAmB;AAAA,UAAlB,CAACC,IAAD,EAAOb,KAAP,CAAkB;AACvBD,MAAAA,cAAc,CAACc,IAAD,CAAd;AACAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAJH,EAKGc,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,WAASG,UAAT,GAAsB;AACpB,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,YAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;;AACA,UAAIC,GAAJ,EAAS;AACP7C,QAAAA,IAAI,CAAC8C,UAAL,CAAgBD,GAAhB,EACCT,IADD,CACOW,GAAD,IAAS;AACb,cAAIA,GAAJ,EAAS;AACPlB,YAAAA,QAAQ,CAACkB,GAAG,CAACC,IAAJ,CAASpB,KAAV,CAAR;AACAD,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,SAND,EAOCW,KAPD,CAOQC,GAAD,IAAS;AACZC,UAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACH,SATD;AAUD;AACF;AACF;;AAED,QAAMW,OAAO,GAAGpD,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,UAAU;AACb,GAFU,EAER,CAAChB,UAAD,CAFQ,CAAT;;AAIA,QAAMyB,cAAc,GAAIH,IAAD,IAAU;AAC/B,UAAM;AAAEpB,MAAAA,KAAF;AAASwB,MAAAA;AAAT,QAAsBJ,IAA5B;AACAhD,IAAAA,IAAI,CAACqD,YAAL,CAAkBzB,KAAlB,EAAyBwB,QAAzB,EACKhB,IADL,CACWW,GAAD,IAAS;AACb,UAAI,CAACA,GAAD,IAAQA,GAAG,CAACO,UAAJ,KAAmB,GAA/B,EAAoC;AAClC,cAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,UAAIR,GAAG,CAACC,IAAR,EAAc;AACZjB,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;AACF,KARL,EASKO,KATL,CASYC,GAAD,IAASC,OAAO,CAACS,GAAR,CAAa,wBAAuBV,GAAI,EAAxC,CATpB;AAUG,GAZL;;AAcE,QAAMiB,WAAW,GAAIR,IAAD,IAAU;AAC5B,UAAM;AAAEI,MAAAA,QAAF;AAAYxB,MAAAA;AAAZ,QAAsBoB,IAA5B;AACAhD,IAAAA,IAAI,CAACyD,aAAL,CAAmBL,QAAnB,EAA6BxB,KAA7B,EACKQ,IADL,CACWY,IAAD,IAAU;AACZ,UAAIA,IAAI,CAACU,KAAT,EAAgB;AAAE;AACdf,QAAAA,YAAY,CAACgB,OAAb,CAAqB,KAArB,EAA4BX,IAAI,CAACU,KAAjC,EADY,CAC6B;;AACzC/B,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAuB,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACH;AACJ,KAPL,EAQKtB,KARL,CAQYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACH,KAVL;AAWH,GAbC;;AAeF,WAASsB,qBAAT,GAAiC;AAC/B9C,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;;AAED,WAAS+C,sBAAT,GAAkC;AAChC7C,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD;;AAED,WAAS8C,mBAAT,GAA+B;AAC7B5C,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAED,WAAS6C,eAAT,CAAyBC,IAAzB,EAA8B;AAC5B5C,IAAAA,eAAe,CAAC4C,IAAD,CAAf;AACD,GA5FY,CA8Fb;;;AACA,WAASC,cAAT,GAA0B;AACxBnD,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GApGY,CAsGX;;;AACF,WAAS8C,gBAAT,CAA0B9B,IAA1B,EAAgC;AAC9BtC,IAAAA,GAAG,CAACqE,WAAJ,CAAgB/B,IAAI,CAACgC,IAArB,EAA2BhC,IAAI,CAACiC,KAAhC,EACGlC,IADH,CACSW,GAAD,IAAS;AACbxB,MAAAA,cAAc,CAACwB,GAAD,CAAd;AACAmB,MAAAA,cAAc;AACf,KAJH,EAKG5B,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACD,KAPH;AAQD,GAhHY,CAkHX;;;AACF,WAASgC,kBAAT,CAA4BC,MAA5B,EAAoC;AAClCzE,IAAAA,GAAG,CAAC0E,UAAJ,CAAeD,MAAf,EACGpC,IADH,CACSW,GAAD,IAAS;AACbxB,MAAAA,cAAc,CAACwB,GAAD,CAAd;AACAmB,MAAAA,cAAc;AACf,KAJH,EAKG5B,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACS,GAAR,CAAYV,GAAZ;AACD,KAPH;AAQD,GA5HY,CA8HX;;;AACF,WAASmC,oBAAT,CAA8BT,IAA9B,EAAoC;AAClClE,IAAAA,GAAG,CAAC4E,OAAJ,CAAYV,IAAI,CAACI,IAAjB,EAAuBJ,IAAI,CAACW,IAA5B,EACGxC,IADH,CACSyC,OAAD,IAAa;AACjBpD,MAAAA,QAAQ,CAAC,CAACoD,OAAD,EAAU,GAAGrD,KAAb,CAAD,CAAR;AACA0C,MAAAA,cAAc;AACf,KAJH,EAKG5B,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAPH;AAQD;;AAED,WAASuC,cAAT,CAAwBb,IAAxB,EAA8B;AAC5B,UAAMc,OAAO,GAAGd,IAAI,CAACe,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAU7D,WAAW,CAAC6D,GAA7C,CAAhB;;AAEA,QAAI,CAACJ,OAAL,EAAc;AACZhF,MAAAA,GAAG,CAACqF,OAAJ,CAAYnB,IAAI,CAACkB,GAAjB,EACG/C,IADH,CACSyC,OAAD,IAAa;AACjBpD,QAAAA,QAAQ,CAAE4D,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACJ,GAAF,KAAUlB,IAAI,CAACkB,GAAf,GAAqBN,OAArB,GAA+BU,CAAjD,CAAZ,CAAR;AACD,OAHH,EAGKjD,KAHL,CAGYC,GAAD,IAAS;AAChBC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,OALD;AAMD,KAPD,MAOO;AACLxC,MAAAA,GAAG,CAACyF,UAAJ,CAAevB,IAAI,CAACkB,GAApB,EAAyB/C,IAAzB,CAA+ByC,OAAD,IAAa;AACzCpD,QAAAA,QAAQ,CAAE4D,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACJ,GAAF,KAAUlB,IAAI,CAACkB,GAAf,GAAqBN,OAArB,GAA+BU,CAAjD,CAAZ,CAAR;AACD,OAFD,EAEGjD,KAFH,CAEUC,GAAD,IAAS;AAChBC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAJD;AAKD;AACF;;AAEC,WAASkD,gBAAT,CAA0BxB,IAA1B,EAAgC;AAC5BlE,IAAAA,GAAG,CAAC2F,UAAJ,CAAezB,IAAI,CAACkB,GAApB,EACK/C,IADL,CACU,MAAM;AACRX,MAAAA,QAAQ,CAAED,KAAD,IACLA,KAAK,CAACmE,MAAN,CAAcJ,CAAD,IACTA,CAAC,CAACJ,GAAF,KAAUlB,IAAI,CAACkB,GADnB,CADI,CAAR;AAKAjB,MAAAA,cAAc;AACjB,KARL,EASK5B,KATL,CASYC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACF,KAXL;AAYH;;AAEH,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEjB,WAApC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,UAAU,EAAE6B;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,IAAI,EAAC,GAA3B;AACE,UAAA,SAAS,EAAItD,IADf;AAEE,UAAA,YAAY,EAAI2D,qBAFlB;AAGE,UAAA,aAAa,EAAIC,sBAHnB;AAIE,UAAA,UAAU,EAAIC,mBAJhB;AAKE,UAAA,WAAW,EAAEC,eALf;AAME,UAAA,KAAK,EAAExC,KANT;AAOE,UAAA,UAAU,EAAEsD,cAPd;AAQE,UAAA,YAAY,EAAEW;AARhB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAoBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE,QAAC,gBAAD;AACE,QAAA,MAAM,EAAEzE,sBADV;AAEE,QAAA,OAAO,EAAEkD,cAFX;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cArBF,eA0BE,QAAC,aAAD;AACE,QAAA,MAAM,EAAEjD,mBADV;AAEE,QAAA,OAAO,EAAEgD,cAFX;AAGE,QAAA,UAAU,EAAEQ;AAHd;AAAA;AAAA;AAAA;AAAA,cA1BF,eA+BE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,0DAFR;AAGE,QAAA,QAAQ,EAAC,cAHX;AAIE,QAAA,UAAU,EAAC,cAJb;AAKE,QAAA,OAAO,EAAER;AALX;AAAA;AAAA;AAAA;AAAA,cA/BF,eAsCE,QAAC,eAAD;AACE,QAAA,MAAM,EAAEpD,qBADV;AAEE,QAAA,OAAO,EAAEoD,cAFX;AAGE,QAAA,cAAc,EAAEK;AAHlB;AAAA;AAAA;AAAA;AAAA,cAtCF,eA2CE,QAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAEnD,YAFR;AAGE,QAAA,OAAO,EAAE8C;AAHX;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GAjOQrD,G;UA2CSf,U;;;KA3CTe,G;AAmOT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport api from '../utils/api';\nimport auth from \"../utils/auth.js\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  // const [message, setMessage] = useState('');\n  const [isRequestSuccessful, setRequestSuccessful] = useState(false);\n\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        auth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setEmail(res.data.email);\n            setIsLoggedIn(true);\n          }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n      }\n    }\n  }\n\n  const history = useHistory();\n\n  useEffect(() => {\n    tokenCheck();\n}, [isLoggedIn])\n\n  const handleRegister = (data) => {\n    const { email, password } = data;\n    auth.registration(email, password)\n        .then((res) => {\n          if (!res || res.statusCode === 400) {\n            throw new Error('Что-то не так с регистрацией');\n          }\n          if (res.data) {\n            setRequestSuccessful(true);\n          }\n        })\n        .catch((err) => console.log(`Что-то пошло не так: ${err}`))\n      }\n\n    const handleLogin = (data) => {\n      const { password, email } = data;\n      auth.authorization(password, email)\n          .then((data) => { \n              if (data.token) { //проверяем, есть ли у пришедших данных токен\n                  localStorage.setItem('jwt', data.token); // сохраняем токен пользователя\n                  setIsLoggedIn(true);\n                  history.push('/');\n              }\n          })\n          .catch((err) => {\n              console.log(err);\n          });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  // Функция-обработчик для закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n    //обновить данные пользователя\n  function handleUpdateUser(user) {\n    api.editProfile(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //обновить аватар\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n    //добавить новую карточку\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n        }).catch((err) => {\n          console.error(err);\n      });\n    } else {\n      api.removeLike(card._id).then((newCard) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n      }).catch((err) => {\n        console.error(err);\n      });\n    }\n  }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((cards) =>\n                    cards.filter((c) =>\n                        c._id !== card._id\n                    )\n                )\n                closeAllPopups();\n            })\n            .catch((err) => {\n               console.error(err);\n            });\n    }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header />\n        <Switch>\n          <Route path='/sign-up'>\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route path='/sign-in'>\n            <Login onLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute exact path=\"/\"\n            component = {Main}\n            onEditAvatar = {handleEditAvatarClick}\n            onEditProfile = {handleEditProfileClick}\n            onAddPlace = {handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n        </Switch>  \n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          formName=\"form-confirm\"\n          submitText=\"Да\"\n          onClose={closeAllPopups}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup\n          name=\"image\"\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}