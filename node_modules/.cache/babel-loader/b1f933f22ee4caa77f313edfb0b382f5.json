{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  getProfileInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._handleResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._handleResponse);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-38',\n  headers: {\n    authorization: '964ddb5f-cae8-4ecc-a75e-1f5f4cc52e46',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/vitalijsofronuk/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_handleResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","method","then","getProfileInfo","editProfile","name","about","body","JSON","stringify","addCard","link","editAvatar","avatar","deleteCard","cardId","addLike","removeLike","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,QAAL,GAAgBD,OAAO,CAACE,OAAxB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACD;;AAEDC,EAAAA,eAAe,CAACC,GAAD,EAAM;AACnB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAOC,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;AACrCa,MAAAA,MAAM,EAAE,KAD6B;AAErCV,MAAAA,OAAO,EAAE,KAAKD;AAFuB,KAA3B,CAAL,CAINY,IAJM,CAID,KAAKV,eAJJ,CAAP;AAKD;;AAEDW,EAAAA,cAAc,GAAG;AACf,WAAOH,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;AACxCa,MAAAA,MAAM,EAAE,KADgC;AAExCV,MAAAA,OAAO,EAAE,KAAKD;AAF0B,KAA9B,CAAL,CAINY,IAJM,CAID,KAAKV,eAJJ,CAAP;AAKD;;AAEDY,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,WAAON,KAAK,CAAE,GAAE,KAAKZ,QAAS,WAAlB,EAA8B;AACxCa,MAAAA,MAAM,EAAE,OADgC;AAExCV,MAAAA,OAAO,EAAE,KAAKD,QAF0B;AAGxCiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBJ,QAAAA,IAAI,EAAEA,IADa;AAEnBC,QAAAA,KAAK,EAAEA;AAFY,OAAf;AAHkC,KAA9B,CAAL,CAQNJ,IARM,CAQD,KAAKV,eARJ,CAAP;AASD;;AAEDkB,EAAAA,OAAO,CAACL,IAAD,EAAOM,IAAP,EAAa;AAClB,WAAOX,KAAK,CAAE,GAAE,KAAKZ,QAAS,QAAlB,EAA2B;AACrCa,MAAAA,MAAM,EAAE,MAD6B;AAErCV,MAAAA,OAAO,EAAE,KAAKD,QAFuB;AAGrCiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBJ,QAAAA,IAAI,EAAEA,IADa;AAEnBM,QAAAA,IAAI,EAAEA;AAFa,OAAf;AAH+B,KAA3B,CAAL,CAQNT,IARM,CAQD,KAAKV,eARJ,CAAP;AASD;;AAEDoB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOb,KAAK,CAAE,GAAE,KAAKZ,QAAS,kBAAlB,EAAqC;AAC/Ca,MAAAA,MAAM,EAAE,OADuC;AAE/CV,MAAAA,OAAO,EAAE,KAAKD,QAFiC;AAG/CiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBI,QAAAA,MAAM,EAAEA;AADW,OAAf;AAHyC,KAArC,CAAL,CAONX,IAPM,CAOD,KAAKV,eAPJ,CAAP;AAQD;;AAEDsB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOf,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAAS2B,MAAO,EAAlC,EAAqC;AAC/Cd,MAAAA,MAAM,EAAE,QADuC;AAE/CV,MAAAA,OAAO,EAAE,KAAKD;AAFiC,KAArC,CAAL,CAINY,IAJM,CAID,KAAKV,eAJJ,CAAP;AAKD;;AAEDwB,EAAAA,OAAO,CAACD,MAAD,EAAS;AACd,WAAOf,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAAS2B,MAAO,QAAlC,EAA2C;AACrDd,MAAAA,MAAM,EAAE,KAD6C;AAErDV,MAAAA,OAAO,EAAE,KAAKD;AAFuC,KAA3C,CAAL,CAINY,IAJM,CAID,KAAKV,eAJJ,CAAP;AAKD;;AAEDyB,EAAAA,UAAU,CAACF,MAAD,EAAS;AACjB,WAAOf,KAAK,CAAE,GAAE,KAAKZ,QAAS,UAAS2B,MAAO,QAAlC,EAA2C;AACrDd,MAAAA,MAAM,EAAE,QAD6C;AAErDV,MAAAA,OAAO,EAAE,KAAKD;AAFuC,KAA3C,CAAL,CAINY,IAJM,CAID,KAAKV,eAJJ,CAAP;AAKD;;AAtFO;;AAyFV,MAAM0B,GAAG,GAAG,IAAIjC,GAAJ,CAAQ;AAClBI,EAAAA,OAAO,EAAE,6CADS;AAElBE,EAAAA,OAAO,EAAE;AACP4B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFS,CAAR,CAAZ;AAQA,eAAeD,GAAf","sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  } \n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n    .then(this._handleResponse);\n  }\n\n  getProfileInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n    .then(this._handleResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._handleResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._handleResponse);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n    .then(this._handleResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._handleResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-38',\n  headers: {\n    authorization: '964ddb5f-cae8-4ecc-a75e-1f5f4cc52e46',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}